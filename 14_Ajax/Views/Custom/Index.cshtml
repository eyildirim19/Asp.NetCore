@model IndexViewModel
@*Category sınıfımızı view'dan görememesinin nedeni namespacei tanımlı değildir...Models namespace default viewlardan erişilebelek şekilde tanımlnamışken sonradan oluşturulan OrnekModels namespacei haliyle viewlara tanılılmamıştır..Viewlardan bir sınıa erişmek için namespacei Views klasörü içerisinde ViewImports dosyasına eklenmelidir..(Bunu standart mvc'de config dosyasına yapıyorrduk)*@

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <link href="~/lib/bootstrap/dist/css/bootstrap.css" rel="stylesheet" />
    <script src="~/lib/jquery/dist/jquery.js"></script>


</head>
<body>
    <div class="container">
        <div class="row">
            <div class="col-lg-3">
                <ul class="list-group">
                    @foreach (Category item in Model.Categories)
                    {
                        <li class="list-group-item">@item.Name</li>
                    }
                </ul>
            </div>
            <div class="col-lg-9">


                <div class="form-group">
                    <input type="text" placeholder="Aramak için birşeyler yaz..." id="SearchText" name="text" class="form-control form-control-sm" style="width:100%" />
                </div>


                <div id="result">
                </div>

                <script>

                    $(document).ready(function () {

                        $("#SearchText").keyup(function () {
                            var val = $(this).val();
                            if (val.length == 0) {
                                $("#result").html("");
                            }
                            else {
                                // NOT : AJAX KONUSU ÖNEMLİDİR.....

                                // jquery ajax...
                                $.ajax({
                                    type: "POST", // REQUEST TYPE
                                    url: "@Url.Action("SearchIlan","Home")",
                                    data: { text: val }, // gönderilecek parametre(ler)
                                    dataType: "html",
                                    success: function (r) {
                                        console.log(r); // responsi ekrana yazdır..
                                        $("#result").html(r);
                                    },
                                    error: function () {
                                        alert("bir hata oluştu...");
                                    }
                                });
                            }
                        });

                    });

                    function SearchResult(resp) {
                        $("#result").html(resp);
                    }

                </script>

                <br />



                <table class="table table-bordered">
                    <tr>
                        <td colspan="5">Sizin için seçmiştik...</td>
                    </tr>
                    <tr>
                        <th colspan="2">Başlık</th>
                        <th>Category</th>
                        <th>Fiyat</th>
                        <th>Eklenme Tarihi</th>
                    </tr>
                    @foreach (Listing item in Model.Listings)
                    {
                        <tr>
                            <td rowspan="2">
                                <img src="https://cdn4.iconfinder.com/data/icons/social-media-and-logos-11/32/Logo_Github-256.png" style="width:150px;" />
                            </td>
                            <td>@item.Title</td>
                            <td>@item.Category.Name</td>
                            <td>@item.Price</td>
                            <td>@item.CreDate.ToShortDateString()</td>
                        </tr>
                        <tr>
                            <td colspan="2">
                                @*<a href="@Url.Action("Detay","Home",new { ListingID = item.Id })">DETAY</a>*@
                                <a class="btn btn-primary form-control" asp-action="Detay" asp-controller="Home" asp-route-ListingID="@item.Id">İncele</a>
                            </td>
                            <td colspan="2">

                                @*
                                    data-ajax        => formun ajax requesti yapılacağı belirtilir..
                                    data-ajax-succes => işlem başarılı olduğunda tetiklenecek javascript fonksiyonu belirtilir.
                                    data-ajax-error => request esnasında hata olmadı durumda tetiklenecek javascript fonksiyonu..
                                *@


                                <!--hidden field..html'de gizli veri tutmak için kullanır..-->
                                <input type="hidden" value="@item.Id" name="ListId" />
                                <button class="btn btn-info form-control" onclick="SepeteAt('@item.Id')">Sepete Ekle</button>

                            </td>
                        </tr>
                    }
                </table>

                <script>

                    function SepeteAt(id) {
                        var req = new XMLHttpRequest();//xhr // ajax requesti yapılırken kullanılan javascript  objesidir....
                        req.open("POST", "@Url.Action("SepeteAt","Home")"); //reqeust yöntemi (POST,GET) ve yapılacak action adı

                        var formData = new FormData();
                        formData.append("ListId", id);


                        // gelen cevabı yakalamak için
                        req.onreadystatechange = function () {

                            console.log(req.readyState); // request durumu
                            if (req.readyState == 4) {

                                var a = "4", b = "5";
                                var result = parseInt(a) + parseInt(b);
                                console.log(result);

                                console.log(req.responseType + " " + req.responseText); // gelen cevabı yazdır...

                                // gelen cevap text olarak geldiği için json olarak yorumlanmaz. sadece json formatta bir text gelir..
                                var obj = JSON.parse(req.responseText);
                                console.log(obj.message); // gelen cevabı ekrana yazdır...

                            } // işlem tamamlandıysa...

                        };

                        req.send(formData); // requesti gönder.... (parametreleri gönder)
                    }

                    function hata() {
                        alert("bir hata oluştu");
                    }

                    function cevap(r) {
                        if (r.code == 0) {
                            alert(r.message);
                        }
                    }

                </script>
            </div>
        </div>
    </div>
</body>
</html>

@*
    Ajax (Asnynronus Javascript and Xml) => (Javascript teknolojisir)Javascript ile server'a request yapıp, response durumunda sayfanın tamanını güncellemek yerine sadece belli bir kısmını güncellememizi sağlar. yani sayfa tamamen post edilmek yerine, refresh yapmadan post edilir gelen cevap sadece belli bir yerde güncellenir..

    Ajax bir javascript teknolojisidir;
    Javascript XmlHttpRequest nesnesi, Jquery ile Jquery.Ajax nesnesi ve Asp.net Mvc ile sunulan unobtrusive ajax teknoojisi ile kullanılabilir...
*@ 